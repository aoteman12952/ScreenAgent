{
    "task_prompt": "Find and add the most reviewed jeans to the shopping cart using filters on a shopping page",
    "send_prompt": "You're very familiar with the Windows operating system. Now you need to use the Windows operating system to complete a mission.\nYour goal now is to manipulate a computer screen, video width: 1024, video height: 768, the overall mission is: \"Find and add the most reviewed jeans to the shopping cart using filters on a shopping page\".\n\nWe have developed an implementation plan for this overall mission:\n\n    1. Click into the search bar.\n\n    2. Type 'jeans' into the search bar.\n\n    3. Press the 'Enter' key to search for jeans.\n\n    4. Select the 'Sort by' filter.\n\n    5. Choose the option for 'Customer Reviews' or similar.\n\n    6. Click on the most reviewed jeans to go to their product page.\n\n    7. If necessary, select size and color options.\n\n    8. Click on the 'Add to cart' button.\n\n\nThe current subtask is \"If necessary, select size and color options.\".\nYou can use the mouse and keyboard, the optional actions are:\n```json\n[\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"click\",\"mouse_button\":\"left\",\"mouse_position\":{\"width\":int,\"height\":int}},\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"double_click\",\"mouse_button\":\"left\",\"mouse_position\":{\"width\":int,\"height\":int}},\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"scroll_up\",\"scroll_repeat\":int},\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"scroll_down\",\"scroll_repeat\":int},\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"move\",\"mouse_position\":{\"width\":int,\"height\":int}},\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"drag\",\"mouse_button\":\"left\",\"mouse_position\":{\"width\":int,\"height\":int}},\n    {\"action_type\":\"KeyboardAction\",\"keyboard_action_type\":\"press\",\"keyboard_key\":\"KeyName in keysymdef\"},\n    {\"action_type\":\"KeyboardAction\",\"keyboard_action_type\":\"press\",\"keyboard_key\":\"Ctrl+A\"},\n    {\"action_type\":\"KeyboardAction\",\"keyboard_action_type\":\"text\",\"keyboard_text\": \"Hello, world!\"},\n    {\"action_type\":\"WaitAction\",\"wait_time\":float}\n]\n```\nWhere the mouse position is relative to the top-left corner of the screen, and the keyboard keys are described in [keysymdef.h].\n\nPlease make output execution actions, please format them in json, e.g. \nMy plan is to click the Windows button, it's on the left bottom corner, so my action will be:\n```json \n[\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"click\",\"mouse_button\":\"left\",\"mouse_position\":{\"width\":10,\"height\":760}}\n]\n```\n\nAnother example: \nMy plan is to open the notepad, so my action will be:\n```json\n[\n    {\"action_type\":\"KeyboardAction\",\"keyboard_action_type\":\"press\",\"keyboard_key\":\"Super_L\"},\n    {\"action_type\":\"KeyboardAction\",\"keyboard_text\":\"notepad\"},\n    {\"action_type\":\"KeyboardAction\",\"keyboard_action_type\":\"press\",\"keyboard_key\":\"Return\"}\n]\n```\n\n\nThe current subtask is \"If necessary, select size and color options.\", please give the detailed next actions based on the state of the existing screen image.",
    "status": "acting",
    "LLM_response": "Based on the current screen image showing a product page on an online shopping platform, it appears that there are options for size selection. To complete the task \"If necessary, select size and color options,\" we must first determine if a size and color are already selected or if we need to choose them before adding the jeans to the cart.\n\nHere's an example of what the actions might look like based on the assumptions that:\n1. Size or color options have to be selected (the exact position of these elements will vary from website to website and screen resolution).\n2. The position for size '30W x 32L' and color 'Antique Indigo' are hypothetically at width: 200, height: 500 and width: 200, height: 550 respectively (these positions are estimates and would need to be determined by the actual position on the screen).\n\n```json\n[\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"click\",\"mouse_button\":\"left\",\"mouse_position\":{\"width\":200,\"height\":500}},\n    {\"action_type\":\"WaitAction\",\"wait_time\":1.0},\n    {\"action_type\":\"MouseAction\",\"mouse_action_type\":\"click\",\"mouse_button\":\"left\",\"mouse_position\":{\"width\":200,\"height\":550}},\n    {\"action_type\":\"WaitAction\",\"wait_time\":1.0}\n]\n```\n\nThe `WaitAction` commands are included to allow the website time to respond to each selection before moving on to the next action. These",
    "LLM_response_editer": "The JSON format for selecting sizes operates as follows:\n\n```json\n[\n{\"action_type\":\"MouseAction\",\"mouse_action_type\": \"click\", \"mouse_position\": {\"width\":535, \"height\": 344}, \"mouse_button\": \"left\"}\n]\n```\n",
    "video_height": 768,
    "video_width": 1024,
    "saved_image_name": "2024-01-14_13-58-55-836700.jpg",
    "current_task": "If necessary, select size and color options.",
    "actions": [
        {
            "action_type": "MouseAction",
            "mouse_action_type": "click",
            "mouse_button": "left",
            "mouse_position": {
                "width": 535,
                "height": 344
            },
            "clickable_area": {
                "upper_left_position": {
                    "width": 496,
                    "height": 126
                },
                "lower_right_position": {
                    "width": 588,
                    "height": 636
                }
            }
        }
    ]
}